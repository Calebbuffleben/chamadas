// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Organization {
  id          String   @id @default(cuid())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relationships
  users User[]

  @@map("organizations")
}

model User {
  id          String   @id @default(cuid())
  email       String   @unique
  name        String
  azureId     String?  @unique
  organizationId String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relationships
  organization    Organization       @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  presenceSessions PresenceSession[]

  @@map("users")
}

model Meeting {
  id          String   @id @default(cuid())
  title       String
  startTime   DateTime
  endTime     DateTime
  platform    MeetingPlatform
  externalId  String?  // External ID from the platform (Zoom meeting ID, Teams meeting ID, etc.)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relationships
  presenceSessions PresenceSession[]

  @@map("meetings")
}

model PresenceSession {
  id          String   @id @default(cuid())
  userId      String
  meetingId   String
  joinedAt    DateTime
  leftAt      DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relationships
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  meeting     Meeting  @relation(fields: [meetingId], references: [id], onDelete: Cascade)
  focusIntervals FocusInterval[]

  @@map("presence_sessions")
}

model FocusInterval {
  id                String   @id @default(cuid())
  presenceSessionId String
  startedAt         DateTime
  endedAt           DateTime?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  // Relationships
  presenceSession PresenceSession @relation(fields: [presenceSessionId], references: [id], onDelete: Cascade)

  @@map("focus_intervals")
}

enum MeetingPlatform {
  ZOOM
  TEAMS
  SLACK
}
