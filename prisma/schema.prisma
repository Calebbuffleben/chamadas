// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String       @id @default(cuid())
  name          String?
  email         String?      @unique
  department    String
  microsoftAccessToken String?
  microsoftRefreshToken String?
  microsoftTokenExpiresAt DateTime?
  zoomAccessToken String?
  zoomRefreshToken String?
  zoomTokenExpiresAt DateTime?
  organizationId String
  organization   Organization @relation(fields: [organizationId], references: [id])
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  createdMeetings ExternalMeeting[] @relation("MeetingCreator")
  attendances   Attendance[]

  @@index([organizationId])
  @@index([email])
  @@index([microsoftTokenExpiresAt])
  @@index([zoomTokenExpiresAt])
}

model ExternalMeeting {
  id             String       @id @default(cuid())
  externalId     String
  topic          String
  startAt        DateTime
  endAt          DateTime
  platform       Platform
  organizationId String
  organization   Organization @relation(fields: [organizationId], references: [id])
  createdById    String
  createdBy      User         @relation("MeetingCreator", fields: [createdById], references: [id])
  attendances    Attendance[]
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt

  @@unique([externalId, platform])
  @@index([organizationId])
  @@index([createdById])
  @@index([startAt])
  @@index([endAt])
  @@index([platform])
  @@index([organizationId, startAt])
  @@index([organizationId, platform])
}

model Organization {
  id            String           @id @default(cuid())
  name          String
  users         User[]
  externalMeetings ExternalMeeting[]
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt

  @@index([name])
}

model Attendance {
  id                String         @id @default(cuid())
  userId            String
  meetingId         String
  joinedAt          DateTime
  leftAt            DateTime?
  wasActive         Boolean        @default(true)
  disconnects       Int            @default(0)
  totalEngagementTime Int          @default(0)
  timeInMeeting     Int            @default(0)
  engagementScore   Float          @default(0)
  user              User           @relation(fields: [userId], references: [id])
  meeting           ExternalMeeting @relation(fields: [meetingId], references: [id])
  createdAt         DateTime       @default(now())
  updatedAt         DateTime       @updatedAt

  @@unique([userId, meetingId])
  @@index([userId])
  @@index([meetingId])
  @@index([joinedAt])
  @@index([leftAt])
  @@index([wasActive])
  @@index([engagementScore])
  @@index([userId, joinedAt])
  @@index([meetingId, joinedAt])
}

enum Platform {
  ZOOM
  TEAMS
}
